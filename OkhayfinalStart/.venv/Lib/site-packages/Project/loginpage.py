# import os
# from PyQt5.QtWidgets import ( # type: ignore
#     QWidget, QLabel, QLineEdit, QPushButton, QGridLayout, QVBoxLayout, QHBoxLayout, QSizePolicy, QSpacerItem
# )
# from PyQt5.QtGui import QFont, QPixmap # type: ignore
# from PyQt5.QtCore import Qt, pyqtSignal # type: ignore

# class LoginPage(QWidget):
#     loginSuccess = pyqtSignal(str, str)

#     def __init__(self, parent=None):
#         super().__init__(parent)
#         self.initUI()

#         # Connect the login page's signal to the checkwho method in the parent
#         if parent:
#             self.loginSuccess.connect(parent.checkwho)

#     def initUI(self):
#         base_dir = os.path.dirname(os.path.abspath(__file__))
#         self.setWindowTitle("Login Page")
#         self.setGeometry(100, 100, 1000, 600)

#         # Main layout with QGridLayout
#         main_layout = QGridLayout(self)

#         # Spacer to adjust layout height
#         top_spacer = QSpacerItem(20, 30, QSizePolicy.Minimum, QSizePolicy.Expanding)

#         # Left side layout with an image
#         left_layout = QVBoxLayout()
#         left_widget = QWidget()
#         left_widget.setLayout(left_layout)

#         # Image setup
#         image_label = QLabel()
#         pixmap = QPixmap(base_dir + '/Pictures/display.jpeg')
#         image_label.setPixmap(pixmap.scaled(800, 600))
#         image_label.setAlignment(Qt.AlignCenter)

#         # Add image to the layout
#         left_layout.addWidget(image_label)
#         left_layout.setAlignment(Qt.AlignCenter)
#         left_layout.setSpacing(0)
#         left_layout.addStretch()

#         # Right side layout with logo, clinic name, and login form
#         right_layout = QVBoxLayout()
#         right_widget = QWidget()
#         right_widget.setLayout(right_layout)
#         right_layout.setAlignment(Qt.AlignRight)
#         right_layout.setSpacing(20)

#         logo_label = QLabel()
#         logo_pixmap = QPixmap(base_dir + '/Pictures/logo.png')
#         logo_label.setPixmap(logo_pixmap.scaledToWidth(200, Qt.SmoothTransformation))
#         logo_label.setAlignment(Qt.AlignCenter)
#         right_layout.addWidget(logo_label)

#         clinic_name_label = QLabel("Clinic Name")
#         clinic_name_label.setFont(QFont("Arial", 20))
#         clinic_name_label.setAlignment(Qt.AlignCenter)
#         right_layout.addWidget(clinic_name_label)

#         # Login form layout
#         login_form_layout = QVBoxLayout()
#         login_form_layout.setAlignment(Qt.AlignCenter)
#         login_form_layout.setSpacing(10)

#         email_label = QLabel("Email:")
#         email_label.setFont(QFont("Arial", 10))
#         login_form_layout.addWidget(email_label)

#         self.email_input = QLineEdit()
#         self.email_input.setFixedWidth(350)
#         self.email_input.setFont(QFont("Arial", 10))
#         login_form_layout.addWidget(self.email_input)

#         password_label = QLabel("Password:")
#         password_label.setFont(QFont("Arial", 10))
#         login_form_layout.addWidget(password_label)

#         self.password_input = QLineEdit()
#         self.password_input.setFixedWidth(350)
#         self.password_input.setFont(QFont("Arial", 10))
#         self.password_input.setEchoMode(QLineEdit.Password)
#         login_form_layout.addWidget(self.password_input)

#         login_button = QPushButton("Login")
#         login_button.setFont(QFont("Arial", 12))
#         login_button.setFixedWidth(200)
#         login_button.clicked.connect(self.on_login_button_click)
#         login_form_layout.addWidget(login_button, alignment=Qt.AlignCenter)

#         # Add the login form layout to the right layout
#         right_layout.addLayout(login_form_layout)
#         right_layout.addStretch()

#         # Add spacer between header and content
#         main_layout.addItem(top_spacer, 0, 0, 1, 2)

#         # Add left and right widgets (with layouts) to the main layout
#         main_layout.addWidget(left_widget, 1, 0)
#         main_layout.addWidget(right_widget, 1, 1)

#         # Stretch factors for even layout spacing
#         main_layout.setRowStretch(0, 1)
#         main_layout.setRowStretch(1, 6)
#         main_layout.setColumnStretch(0, 1)
#         main_layout.setColumnStretch(1, 1)

#         self.setLayout(main_layout)

#     def on_login_button_click(self):
#         username = self.email_input.text()
#         password = self.password_input.text()
#         # print(username)
#         # print(password)
#         self.loginSuccess.emit(username, password)

# img_path = resource_path(os.path.join('..', '..', '..', 'Pictures', 'display.jpeg'))
# print("Resolved path:", img_path)

# pixmap = QPixmap(img_path)
# if pixmap.isNull():
#     print("Failed to load image.")
# else:
#     print("Image loaded successfully.")

import os
import sys
from PyQt5.QtWidgets import (
    QWidget, QLabel, QLineEdit, QPushButton,
    QVBoxLayout, QHBoxLayout, QCheckBox, QApplication
)
from PyQt5.QtGui import QFont, QPixmap
from PyQt5.QtCore import Qt, pyqtSignal

def resource_path(relative_path):
    """ Get absolute path to resource, works for dev and PyInstaller """
    try:
        base_path = sys._MEIPASS
    except AttributeError:
        base_path = os.path.abspath(".")
    return os.path.join(base_path, relative_path)

class LoginPage(QWidget):
    loginSuccess = pyqtSignal(str, str)

    def __init__(self, parent=None):
        super().__init__(parent)
        self.initUI()

        if parent:
            self.loginSuccess.connect(parent.checkwho)

    def initUI(self):
        self.setWindowTitle("Login Page")
        self.setGeometry(100, 100, 1200, 700)

        # Background gradient
        self.setStyleSheet("""
            QWidget {
                background: qlineargradient(
                    spread: pad, x1: 0, y1: 0, x2: 1, y2: 0,
                    stop: 0 #f3f4f6, stop: 1 #d4d8e2
                );
            }
        """)

        main_layout = QHBoxLayout(self)

        # âœ… Image path resolution
        img_path = resource_path(os.path.join('Pictures', 'display.jpeg'))
        print("Resolved path:", img_path)

        pixmap = QPixmap(img_path)
        if pixmap.isNull():
            print("Failed to load image from:", img_path)
        else:
            print("Image loaded successfully")

        # Left panel (Image)
        left_panel = QLabel()
        if not pixmap.isNull():
            left_panel.setPixmap(pixmap.scaled(600, 700, Qt.KeepAspectRatio, Qt.SmoothTransformation))
        left_panel.setAlignment(Qt.AlignCenter)

        # Right panel
        right_panel = QVBoxLayout()
        right_panel.setContentsMargins(50, 50, 50, 50)
        right_panel.setSpacing(20)
        right_panel.setAlignment(Qt.AlignCenter)

        # Sign-in title
        login_title = QLabel("Sign In")
        login_title.setFont(QFont("Arial", 24, QFont.Bold))
        login_title.setStyleSheet("color: #2C3E50;")
        login_title.setAlignment(Qt.AlignCenter)
        right_panel.addWidget(login_title)

        # Form layout
        form_layout = QVBoxLayout()
        form_layout.setSpacing(15)

        # Username input
        username_label = QLabel("Username or Email:")
        username_label.setFont(QFont("Arial", 12))
        form_layout.addWidget(username_label)

        self.username_input = QLineEdit()
        self.username_input.setPlaceholderText("Enter your username or email")
        self.username_input.setFont(QFont("Arial", 12))
        self.username_input.setFixedWidth(350)
        self.username_input.setStyleSheet("""
            QLineEdit {
                border: 1px solid #bdc3c7;
                border-radius: 10px;
                padding: 10px;
                background-color: white;
            }
        """)
        form_layout.addWidget(self.username_input)

        # Password input
        password_label = QLabel("Password:")
        password_label.setFont(QFont("Arial", 12))
        form_layout.addWidget(password_label)

        self.password_input = QLineEdit()
        self.password_input.setPlaceholderText("Enter your password")
        self.password_input.setEchoMode(QLineEdit.Password)
        self.password_input.setFont(QFont("Arial", 12))
        self.password_input.setFixedWidth(350)
        self.password_input.setStyleSheet("""
            QLineEdit {
                border: 1px solid #bdc3c7;
                border-radius: 10px;
                padding: 10px;
                background-color: white;
            }
        """)
        form_layout.addWidget(self.password_input)

        # Remember me / Forgot password
        options_layout = QHBoxLayout()
        remember_me = QCheckBox("Remember me")
        remember_me.setFont(QFont("Arial", 10))
        options_layout.addWidget(remember_me)

        forgot_password = QLabel("<a href='#'>Forgot password?</a>")
        forgot_password.setFont(QFont("Arial", 10))
        forgot_password.setStyleSheet("color: #3498db;")
        forgot_password.setOpenExternalLinks(True)
        options_layout.addWidget(forgot_password, alignment=Qt.AlignRight)

        form_layout.addLayout(options_layout)

        # Sign in button
        login_button = QPushButton("Sign In")
        login_button.setFont(QFont("Arial", 14, QFont.Bold))
        login_button.setFixedWidth(200)
        login_button.setStyleSheet("""
            QPushButton {
                background-color: #3498db;
                color: white;
                border-radius: 15px;
                padding: 10px;
            }
            QPushButton:hover {
                background-color: #217dbb;
            }
        """)
        login_button.clicked.connect(self.on_login_button_click)
        form_layout.addWidget(login_button, alignment=Qt.AlignCenter)

        # Create account label
        create_account_label = QLabel("<a href='#'>New here? Create an Account</a>")
        create_account_label.setFont(QFont("Arial", 10))
        create_account_label.setStyleSheet("color: #3498db;")
        create_account_label.setAlignment(Qt.AlignCenter)
        create_account_label.setOpenExternalLinks(True)
        form_layout.addWidget(create_account_label)

        # Combine everything
        right_panel.addLayout(form_layout)
        main_layout.addWidget(left_panel, stretch=1)
        main_layout.addLayout(right_panel, stretch=1)
        self.setLayout(main_layout)

    def on_login_button_click(self):
        username = self.username_input.text()
        password = self.password_input.text()
        self.loginSuccess.emit(username, password)

# Run the app
if __name__ == "__main__":
    app = QApplication(sys.argv)
    window = LoginPage()
    window.show()
    sys.exit(app.exec_())
